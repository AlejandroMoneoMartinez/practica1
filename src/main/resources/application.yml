# YAML file docs https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config-yaml 
# Common Application properties: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties
spring:
  application:
    name: practica1
  #datasource: #Configuracion de la conexión con el SGBD
  #  url: jdbc:mariadb://localhost:3306/practica1db?useSSL=false
  #  username: root
  #  password:
  #jpa: #Configuración del ORM JPA (HIBERNATE)
  #  show-sql: true
  #  hibernate:
  #    ddl-auto: create #validate #delete #delete-drop
  thymeleaf: #Configuración del motor de plantillas
    cache: false #En producción se pone a true
    mode: HTML
  datasource: #Configuración de la conexión con el SGBD Postgres
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
  jpa: #Configuración del ORM JPA
    show-sql: false #Mostrar por consola las consultas SQL
    hibernate:
      ddl-auto: update #Modificar el SCHEMA de la base de datos automáticamente
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # h2:
  #   console:
  #     enabled: true
  #     path: /h2-console
  # datasource:
  #   url: jdbc:h2:mem:testdb
server:
  port: 8080
jwt:
  secret: salt
cors:
  allowedOrigins: '*'
  allowedMethods: GET, POST, PUT, DELETE, HEAD
# graphiql:
#   mapping: /graphql
#   enabled: true
#   endpoint: /graphql


# graphql:
#   servlet:
#     mapping: /graphql
#     enabled: true
#     corsEnabled: true

# graphql:
#   tools:
#     schema-location-pattern: "**/*.graphqls"
#     use-default-objectmapper: true
#   servlet:
#     mapping: /graphql
#     enabled: true
#     corsEnabled: true
#     # if you want to @ExceptionHandler annotation for custom GraphQLErrors
#     exception-handlers-enabled: true
#     contextSetting: PER_REQUEST_WITH_INSTRUMENTATION
